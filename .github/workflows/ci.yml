name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cuda-version: ['11.8.0', '12.8.0']
        cmake-version: ['3.16', '3.24']

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libomp-dev python3-dev python3-pip
          python3 -m pip install pybind11

      - name: Setup CUDA
        uses: Jimver/cuda-toolkit@v0.2.11
        with:
          cuda: ${{ matrix.cuda-version }}

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: ${{ matrix.cmake-version }}

      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_GUI=OFF

      - name: Build
        run: |
          cd build
          make -j$(nproc)

      - name: Run tests
        run: |
          cd build
          # Add basic smoke tests
          ./cudaSAXS --help
          # Add unit tests when available
          # ctest --verbose

  build-gui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qt6-base-dev qt6-tools-dev build-essential libomp-dev python3-dev
          python3 -m pip install pybind11

      - name: Setup CUDA
        uses: Jimver/cuda-toolkit@v0.2.11
        with:
          cuda: '11.8.0'

      - name: Build with GUI
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_GUI=ON
          make -j$(nproc)

  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 mypy

      - name: Check Python code formatting
        run: |
          black --check pysrc/

      - name: Lint Python code
        run: |
          flake8 pysrc/ --max-line-length=88

      - name: Type check Python code
        run: |
          mypy pysrc/ --ignore-missing-imports

  documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install documentation dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx-rtd-theme

      - name: Check documentation builds
        run: |
          # Add when Sphinx docs are available
          # cd docs && make html
          echo "Documentation check passed"

      - name: Check markdown links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          use-verbose-mode: 'yes'
          config-file: '.github/workflows/mlc_config.json'
